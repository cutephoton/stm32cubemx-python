{
  "cube": {
    "schema": {
      "type": "Namespace",
      "name": "",
      "oname": "",
      "help": null,
      "children": [
        {
          "type": "Caller",
          "name": "help",
          "oname": "help",
          "help": null,
          "argcount": 0
        },
        {
          "type": "Caller",
          "name": "exit",
          "oname": "exit",
          "help": "exit: exit",
          "argcount": 0
        },
        {
          "type": "Namespace",
          "name": "clock",
          "oname": "clock",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "resolution",
              "oname": "resolution",
              "help": "resolve clock issues",
              "argcount": 0
            },
            {
              "type": "Namespace",
              "name": "set",
              "oname": "set",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "hclk",
                  "oname": "hclk",
                  "help": "clock set hclk",
                  "argcount": 1
                }
              ]
            }
          ]
        },
        {
          "type": "Caller",
          "name": "load",
          "oname": "load",
          "help": "load <mcu>: open mcu xml file",
          "argcount": 1
        },
        {
          "type": "Namespace",
          "name": "config",
          "oname": "config",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "load",
              "oname": "load",
              "help": "load <file>: open saved config",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "save",
              "oname": "save",
              "help": "save: save config",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "saveas",
              "oname": "saveas",
              "help": "save <file>: save config",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "saveext",
              "oname": "saveext",
              "help": "save <file>: save extended config",
              "argcount": 1
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "import",
          "oname": "import",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "add_compatibility_rule",
              "oname": "add_compatibility_rule",
              "help": "hack_rules <file>: open saved config",
              "argcount": 4
            },
            {
              "type": "Caller",
              "name": "hackmxdb",
              "oname": "hackmxdb",
              "help": "hackmxdb import <pin name> <signal name>: will hack the MxDb by deleting all Alternates Pins for <signal name> except for <pin name> ",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "openioc",
              "oname": "openioc",
              "help": "load import ioc file",
              "argcount": 1
            },
            {
              "type": "Namespace",
              "name": "set",
              "oname": "set",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "Option",
                  "oname": "Option",
                  "help": "set manual import option",
                  "argcount": 2
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "try",
              "oname": "try",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "import",
                  "oname": "import",
                  "help": "try import",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "import_and_log",
                  "oname": "import_and_log",
                  "help": "import ioc mcu to current mcu, then write the report",
                  "argcount": 1
                },
                {
                  "type": "Namespace",
                  "name": "auto",
                  "oname": "auto",
                  "help": null,
                  "children": [
                    {
                      "type": "Caller",
                      "name": "import",
                      "oname": "import",
                      "help": "import ioc mcu to current mcu, then write the report",
                      "argcount": 1
                    }
                  ]
                }
              ]
            },
            {
              "type": "Caller",
              "name": "GPIOconstraint",
              "oname": "GPIOconstraint",
              "help": "constraints on GPIO <constrainedGPIO>: will set the signal from pin origin to pin target",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "channelconstraint",
              "oname": "channelconstraint",
              "help": "constraints on channel <IPOrigin> <channelOrigin> <IPDestination> <channelDestination>: change channel for described IPs",
              "argcount": 4
            },
            {
              "type": "Namespace",
              "name": "get",
              "oname": "get",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "report",
                  "oname": "report",
                  "help": "get import report",
                  "argcount": 1
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "get",
          "oname": "get",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "version",
              "oname": "version",
              "help": "print current version",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "tpl_path",
              "oname": "tpl_path",
              "help": "get tpl_path:get your template source path",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "dest_path",
              "oname": "dest_path",
              "help": "get dest_path:get your template destination path",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "modes",
              "oname": "modes",
              "help": "get modes <peripheral regular expression match (.* for all)>: get a list of all leaf modes in a peripheral",
              "argcount": 1
            },
            {
              "type": "Namespace",
              "name": "mapped",
              "oname": "mapped",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "modes",
                  "oname": "modes",
                  "help": "get mapped modes <peripheral regular expression match (.* for all)>: get a list of set modes in a peripheral",
                  "argcount": 1
                }
              ]
            },
            {
              "type": "Caller",
              "name": "mode",
              "oname": "mode",
              "help": "get mode <active|available|all> <peripheral (.* for all)>: get mode(s) for a given peripheral",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "mode_param_list",
              "oname": "mode_param_list",
              "help": "get mode_param_list <peripheral> <active_mode>: get parameter(s) for a given active mode",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "mode_param_possvalue",
              "oname": "mode_param_possvalue",
              "help": "get mode_param_possvalue <peripheral> <active_mode> <parameter>: get parameter possible value(s) for a given active mode parameter",
              "argcount": 3
            },
            {
              "type": "Caller",
              "name": "mode_param_pattern",
              "oname": "mode_param_pattern",
              "help": "get mode_param_pattern <peripheral> <active_mode> <pattern>: get all pattern parameter(s) for a given active mode",
              "argcount": 2
            },
            {
              "type": "Namespace",
              "name": "available",
              "oname": "available",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "modes",
                  "oname": "modes",
                  "help": "get available modes <peripheral regular expression match (.* for all)>: get a list of available modes in a peripheral",
                  "argcount": 1
                }
              ]
            },
            {
              "type": "Caller",
              "name": "signal",
              "oname": "signal",
              "help": "get signal <pin>: get the signal set on a pin",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "pinout",
              "oname": "pinout",
              "help": "get pinout: get the mcu pinout",
              "argcount": 0
            },
            {
              "type": "Namespace",
              "name": "gpio",
              "oname": "gpio",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "parameters",
                  "oname": "parameters",
                  "help": "get gpio parameters <matching pin> <matching parameter>: get the gpio parameter value on a pin",
                  "argcount": 2
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "ip",
              "oname": "ip",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "parameters",
                  "oname": "parameters",
                  "help": "get ip parameters <matching ip> <param name>: get the ip parameter value",
                  "argcount": 2
                }
              ]
            },
            {
              "type": "Caller",
              "name": "sub-mode-state",
              "oname": "sub-mode-state",
              "help": "get sub-mode-state <Periph> <moderoot,submode1,submode1.1>",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "available-analog-signals",
              "oname": "available-analog-signals",
              "help": "get available-analog-signals <pin name>",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "sub-modes",
              "oname": "sub-modes",
              "help": "get sub-modes <Periph>",
              "argcount": 1
            },
            {
              "type": "Namespace",
              "name": "mcu",
              "oname": "mcu",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "name",
                  "oname": "name",
                  "help": "get mcu name",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "package",
                  "oname": "package",
                  "help": "get mcu package",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "peripherals",
                  "oname": "peripherals",
                  "help": "get mcu peripherals",
                  "argcount": 0
                }
              ]
            },
            {
              "type": "Caller",
              "name": "functions",
              "oname": "functions",
              "help": "get functions <pin regex>: list all possible functions of a pin",
              "argcount": 1
            },
            {
              "type": "Namespace",
              "name": "possible",
              "oname": "possible",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "remaps",
                  "oname": "remaps",
                  "help": "get possible remaps <signal regex>: list all possible remaps of a matching signal",
                  "argcount": 1
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "generate",
          "oname": "generate",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "code",
              "oname": "code",
              "help": "generate code <path>",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "all_code_in_main",
              "oname": "all_code_in_main",
              "help": "generate all code in main.c",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "one_file_per_ip",
              "oname": "one_file_per_ip",
              "help": "generate one file per ip",
              "argcount": 0
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "set",
          "oname": "set",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "tpl_path",
              "oname": "tpl_path",
              "help": "set tpl_path <path>:set your template source path",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "dest_path",
              "oname": "dest_path",
              "help": "set dest_path <path>:set your template destination path",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "mode",
              "oname": "mode",
              "help": "set mode <Periph> <Mode Name>: set a mode in a peripheral",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "username",
              "oname": "username",
              "help": "set username <Periph> <User Name>: set a User name for a peripheral",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "pin",
              "oname": "pin",
              "help": "set pin <pin name> <signal name>",
              "argcount": 2
            },
            {
              "type": "Namespace",
              "name": "gpio",
              "oname": "gpio",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "parameters",
                  "oname": "parameters",
                  "help": "set gpio parameters <matching pin> <param name> <param value>: set the gpio parameter value on a pin",
                  "argcount": 3
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "ip",
              "oname": "ip",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "parameters",
                  "oname": "parameters",
                  "help": "set ip parameters <matching ip> <param name> <param value>: set the ip parameter value",
                  "argcount": 3
                },
                {
                  "type": "Caller",
                  "name": "no_ui_warning",
                  "oname": "no_ui_warning",
                  "help": "set ip no_ui_warning <matching ip>: disable warnings in ip ui",
                  "argcount": 1
                }
              ]
            },
            {
              "type": "Caller",
              "name": "noparam",
              "oname": "noparam",
              "help": "set noparam <ip regexp>",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "userconst",
              "oname": "userconst",
              "help": "set userconst <userconstant> <value> : add or update a user constant with new value",
              "argcount": 2
            }
          ]
        },
        {
          "type": "Caller",
          "name": "log",
          "oname": "log",
          "help": "log <level>",
          "argcount": 1
        },
        {
          "type": "Namespace",
          "name": "dma",
          "oname": "dma",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "add",
              "oname": "add",
              "help": "dma add <dma request name>: add dma request",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "delete",
              "oname": "delete",
              "help": "dma delete <dma request name>: delete all dma requests having a given name",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "delete_all",
              "oname": "delete_all",
              "help": "dma delete_all: delete all dma requests",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "listbriefly",
              "oname": "listbriefly",
              "help": "dma listbriefly <dma request name>: list all dma requests having a given name",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "list",
              "oname": "list",
              "help": "dma list <dma request name>: list all dma requests having a given name",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "list_controller",
              "oname": "list_controller",
              "help": "dma list_controller <controller name>: list dma requests for a given controller",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "list_periph",
              "oname": "list_periph",
              "help": "dma list_periph <peripheral name>: list dma requests for a given peripheral",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "list_all",
              "oname": "list_all",
              "help": "dma list_all: list all dma requests",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "available_controller_requests",
              "oname": "available_controller_requests",
              "help": "dma available_controller_requests <controller name>: list available dma requests for a given controller",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "available_periph_requests",
              "oname": "available_periph_requests",
              "help": "dma available_periph_requests <peripheral name>: list available dma requests for a given peripheral",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "available_controller_streams",
              "oname": "available_controller_streams",
              "help": "dma available_controller_streams <request name> <controller name>: list available dma streams for a given request in a given controller",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "available_streams",
              "oname": "available_streams",
              "help": "dma available_streams <request name>: list available dma streams for a given request",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "set_flow",
              "oname": "set_flow",
              "help": "usage: dma set_flow <request name> <flow name> ; set dma flow for a given request",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "get_param",
              "oname": "get_param",
              "help": "usage: dma get_param <request name> <param name>; get dma parameter value for a given request",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "set_param",
              "oname": "set_param",
              "help": "usage: dma set_param <request name> <param name> <value>; set dma parameter value for a given request",
              "argcount": 3
            },
            {
              "type": "Caller",
              "name": "is_available_in",
              "oname": "is_available_in",
              "help": "dma is_available_in <request name> <controller name>: is request available in controller",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "is_available",
              "oname": "is_available",
              "help": "dma is_available <request name>: is request available",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "used_flows",
              "oname": "used_flows",
              "help": "dma used_flows: list all used dma flows",
              "argcount": 0
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "mdma",
          "oname": "mdma",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "add_request",
              "oname": "add_request",
              "help": "mdma add_request <mdma request name>: add mdma request",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "add_channel_request",
              "oname": "add_channel_request",
              "help": "mdma add_channel_request <mdma channel name> <mdma request name>: add mdma request on channel",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "delete_channel",
              "oname": "delete_channel",
              "help": "mdma delete_channel <mdma channel name>: delete all mdma requests on a given channel",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "delete_request",
              "oname": "delete_request",
              "help": "mdma delete_request <mdma request name>: delete all mdma requests having a given name",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "delete_all_requests",
              "oname": "delete_all_requests",
              "help": "mdma delete_all_requests: delete all mdma requests",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "list_channel_requests",
              "oname": "list_channel_requests",
              "help": "mdma list_channel_requests <mdma channel name>: list all mdma requests on a given channel",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "list_request",
              "oname": "list_request",
              "help": "mdma list_request <mdma request name>: list all dma requests having a given name",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "list_nth_request_on_channel",
              "oname": "list_nth_request_on_channel",
              "help": "mdma list_nth_request_on_channel <mdma channel name> <request rank> <request name>: list nth request on a channel",
              "argcount": 3
            },
            {
              "type": "Caller",
              "name": "list_nth_request_parameters",
              "oname": "list_nth_request_parameters",
              "help": "mdma list_nth_request_parameters <mdma channel name> <request rank>: list nth request parameters on a channel",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "list_peripheral_requests",
              "oname": "list_peripheral_requests",
              "help": "mdma list_peripheral_requests <peripheral name>: list mdma requests for a given peripheral",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "list_all_requests",
              "oname": "list_all_requests",
              "help": "mdma list_all_requests: list all mdma requests",
              "argcount": 0
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "nvic",
          "oname": "nvic",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "enable",
              "oname": "enable",
              "help": "nvic enable <IRQ number>: enable interrupt",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "disable",
              "oname": "disable",
              "help": "nvic disable <IRQ number>: disable interrupt",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "get_enable_state",
              "oname": "get_enable_state",
              "help": "nvic get_enable_state: get interrupt enable state",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "set_prioritygroup",
              "oname": "set_prioritygroup",
              "help": "nvic set_prioritygroup <priority group>: set interrupt priority group",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "get_prioritygroup",
              "oname": "get_prioritygroup",
              "help": "nvic get_prioritygroup: get interrupt priority group",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "set_usesfreertosfunctions",
              "oname": "set_usesfreertosfunctions",
              "help": "nvic set_usesfreertosfunctions <IRQ number> <boolean value>: set/reset interrupt 'uses freeRTOS functions' flag",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "get_usesfreertosfunctions",
              "oname": "get_usesfreertosfunctions",
              "help": "nvic get_usesfreertosfunctions <IRQ number>: get interrupt 'uses freeRTOS functions' flag",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "set_priority",
              "oname": "set_priority",
              "help": "nvic set_priority <IRQ number> <preemption priority>: set interrupt preemption priority",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "get_priority",
              "oname": "get_priority",
              "help": "nvic get_priority <IRQ number>: get interrupt preemption priority",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "set_subpriority",
              "oname": "set_subpriority",
              "help": "nvic set_subpriority <IRQ number> <subpriority>: set interrupt subpriority",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "get_subpriority",
              "oname": "get_subpriority",
              "help": "nvic get_subpriority <IRQ number>: get interrupt subpriority",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "set_irqhandlergenerated",
              "oname": "set_irqhandlergenerated",
              "help": "nvic set_irqhandlergenerated <IRQ number> <boolean value>: set/reset interrupt 'IRQ handler generated' flag",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "get_irqhandlergenerated",
              "oname": "get_irqhandlergenerated",
              "help": "nvic get_irqhandlergenerated <IRQ number>: get interrupt 'IRQ handler generated' flag",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "get_ip_interrupts",
              "oname": "get_ip_interrupts",
              "help": "nvic get_ip_interrupts <IP name>: get IP interrupts",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "get_interrupts",
              "oname": "get_interrupts",
              "help": "nvic get_interrupts: get interrupts",
              "argcount": 0
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "reset",
          "oname": "reset",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "pin",
              "oname": "pin",
              "help": "reset pin <pin name>",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "signal",
              "oname": "signal",
              "help": "reset signal <signal name>",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "pin-signal",
              "oname": "pin-signal",
              "help": "reset pin <pin name> <signal name>",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "mode",
              "oname": "mode",
              "help": "reset mode <Periph> <Mode Name>: reset a mode in a peripheral",
              "argcount": 2
            },
            {
              "type": "Caller",
              "name": "noparam",
              "oname": "noparam",
              "help": "reset noparam <ip regexp>",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "userconst",
              "oname": "userconst",
              "help": "reset userconst <userconstant> : remove a user constant. No error reporting ",
              "argcount": 1
            }
          ]
        },
        {
          "type": "Caller",
          "name": "clearpinout",
          "oname": "clearpinout",
          "help": "clearpinout: remove all the pin mapping",
          "argcount": 0
        },
        {
          "type": "Namespace",
          "name": "possible_value",
          "oname": "possible_value",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "ip",
              "oname": "ip",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "parameters",
                  "oname": "parameters",
                  "help": "possible_value ip parameters <matching ip> <param name> <param value>: is ip parameter value allowed?",
                  "argcount": 3
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "not_a_possible_value",
          "oname": "not_a_possible_value",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "ip",
              "oname": "ip",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "parameters",
                  "oname": "parameters",
                  "help": "not_a_possible_value ip parameters <matching ip> <param name> <param value>: is ip parameter value not allowed?",
                  "argcount": 3
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "add",
          "oname": "add",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "mw",
              "oname": "mw",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "",
                  "oname": "",
                  "help": "add mw name root_dir mode_file config_file template_dir",
                  "argcount": 5
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "check",
          "oname": "check",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "mcu",
              "oname": "mcu",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "modes",
                  "oname": "modes",
                  "help": "check mcu modes: check modes for current mcu",
                  "argcount": 0
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "mode",
              "oname": "mode",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "enabled",
                  "oname": "enabled",
                  "help": "Check mode enable <Periph> <Mode Name>: check mode enability",
                  "argcount": 2
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "mcus",
              "oname": "mcus",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "xml",
                  "oname": "xml",
                  "help": "open all the mcus",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "modes",
                  "oname": "modes",
                  "help": "check all modes for all mcus",
                  "argcount": 0
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "csv",
          "oname": "csv",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "pinout",
              "oname": "pinout",
              "help": "csv pinout <file>",
              "argcount": 0
            }
          ]
        },
        {
          "type": "Caller",
          "name": "tinyload",
          "oname": "tinyload",
          "help": "tinyload <mcu>: load mcu for pinout only",
          "argcount": 1
        },
        {
          "type": "Caller",
          "name": "waitclock",
          "oname": "waitclock",
          "help": "Wait for a delay in seconds until clock has finished its initialization",
          "argcount": 1
        },
        {
          "type": "Namespace",
          "name": "export",
          "oname": "export",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "script",
              "oname": "script",
              "help": "export configAsScript <outputscript>",
              "argcount": 1
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "tooltip",
          "oname": "tooltip",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "log",
              "oname": "log",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "on",
                  "oname": "on",
                  "help": " tooltip log on: display the tooltip content in log",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "off",
                  "oname": "off",
                  "help": " tooltip log off: hide the tooltip content in log",
                  "argcount": 0
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "list",
          "oname": "list",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "unsupported",
              "oname": "unsupported",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "mcus",
                  "oname": "mcus",
                  "help": "list unsupported mcus",
                  "argcount": 0
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "selector",
          "oname": "selector",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "list",
              "oname": "list",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "peripherals",
                  "oname": "peripherals",
                  "help": "selector list peripherals",
                  "argcount": 0
                },
                {
                  "type": "Namespace",
                  "name": "selected",
                  "oname": "selected",
                  "help": null,
                  "children": [
                    {
                      "type": "Caller",
                      "name": "peripherals",
                      "oname": "peripherals",
                      "help": "selector list selected peripherals",
                      "argcount": 0
                    }
                  ]
                },
                {
                  "type": "Caller",
                  "name": "cores",
                  "oname": "cores",
                  "help": "selector list cores",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "families",
                  "oname": "families",
                  "help": "selector list families",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "subfamilies",
                  "oname": "subfamilies",
                  "help": "selector list subfamilies",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "packages",
                  "oname": "packages",
                  "help": "selector list packages",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "mcus",
                  "oname": "mcus",
                  "help": "selector list mcus",
                  "argcount": 0
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "set",
              "oname": "set",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "peripheral",
                  "oname": "peripheral",
                  "help": "selector set peripheral <periphName> <nbinstance>",
                  "argcount": 2
                },
                {
                  "type": "Caller",
                  "name": "core",
                  "oname": "core",
                  "help": "selector set core <coreName[,coreName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "family",
                  "oname": "family",
                  "help": "selector set family <familyName[,familyName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "subfamily",
                  "oname": "subfamily",
                  "help": "selector set subfamily <subFamilyName[,subFamilyName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "package",
                  "oname": "package",
                  "help": "selector set package <packageName[,packageName...]>",
                  "argcount": 1
                },
                {
                  "type": "Namespace",
                  "name": "io",
                  "oname": "io",
                  "help": null,
                  "children": [
                    {
                      "type": "Caller",
                      "name": "min",
                      "oname": "min",
                      "help": "selector set io min <value>",
                      "argcount": 1
                    }
                  ]
                }
              ]
            },
            {
              "type": "Caller",
              "name": "reset",
              "oname": "reset",
              "help": "selector reset",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "search",
              "oname": "search",
              "help": "selector search <PartNumber>",
              "argcount": 1
            },
            {
              "type": "Namespace",
              "name": "unset",
              "oname": "unset",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "core",
                  "oname": "core",
                  "help": "selector unset core <coreName[,coreName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "family",
                  "oname": "family",
                  "help": "selector unset family <familyName[,familyName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "subfamily",
                  "oname": "subfamily",
                  "help": "selector unset subfamily <subFamilyName[,subFamilyName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "package",
                  "oname": "package",
                  "help": "selector unset package <packageName[,packageName...]>",
                  "argcount": 1
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "get",
              "oname": "get",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "core",
                  "oname": "core",
                  "help": "selector get core",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "family",
                  "oname": "family",
                  "help": "selector get family",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "subfamily",
                  "oname": "subfamily",
                  "help": "selector get subfamily",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "package",
                  "oname": "package",
                  "help": "selector get package",
                  "argcount": 0
                }
              ]
            },
            {
              "type": "Caller",
              "name": "close",
              "oname": "close",
              "help": "selector close",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "open",
              "oname": "open",
              "help": "selector open",
              "argcount": 0
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "boardselector",
          "oname": "boardselector",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "close",
              "oname": "close",
              "help": "boardselector close",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "open",
              "oname": "open",
              "help": "boardselector open",
              "argcount": 0
            },
            {
              "type": "Namespace",
              "name": "list",
              "oname": "list",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "peripherals",
                  "oname": "peripherals",
                  "help": "boardselector list peripherals",
                  "argcount": 0
                },
                {
                  "type": "Namespace",
                  "name": "selected",
                  "oname": "selected",
                  "help": null,
                  "children": [
                    {
                      "type": "Caller",
                      "name": "peripherals",
                      "oname": "peripherals",
                      "help": "boardselector list selected peripherals",
                      "argcount": 0
                    }
                  ]
                },
                {
                  "type": "Caller",
                  "name": "boards",
                  "oname": "boards",
                  "help": "boardselector list boards",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "vendors",
                  "oname": "vendors",
                  "help": "boardselector list vendors",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "types",
                  "oname": "types",
                  "help": "boardselector list types",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "mcuseries",
                  "oname": "mcuseries",
                  "help": "boardselector list mcuseries",
                  "argcount": 0
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "set",
              "oname": "set",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "peripheral",
                  "oname": "peripheral",
                  "help": "boardselector set peripheral <periphName> <nbinstance>",
                  "argcount": 2
                },
                {
                  "type": "Caller",
                  "name": "vendor",
                  "oname": "vendor",
                  "help": "boardselector set vendor <vendorName[,vendorName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "type",
                  "oname": "type",
                  "help": "boardselector set type <typeName[,typeName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "mcuseries",
                  "oname": "mcuseries",
                  "help": "boardselector set mcuseries <mcuseriesName[,mcuseriesName...]>",
                  "argcount": 1
                }
              ]
            },
            {
              "type": "Caller",
              "name": "reset",
              "oname": "reset",
              "help": "boardselector reset",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "search",
              "oname": "search",
              "help": "boardselector search <PartNumber>",
              "argcount": 1
            },
            {
              "type": "Namespace",
              "name": "unset",
              "oname": "unset",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "vendor",
                  "oname": "vendor",
                  "help": "boardselector unset vendor <vendorName[,vendorName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "type",
                  "oname": "type",
                  "help": "boardselector unset type <typeName[,typeName...]>",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "mcuseries",
                  "oname": "mcuseries",
                  "help": "boardselector unset mcuseries <mcuseriesName[,mcuseriesName...]>",
                  "argcount": 1
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "get",
              "oname": "get",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "vendor",
                  "oname": "vendor",
                  "help": "boardselector get vendor",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "type",
                  "oname": "type",
                  "help": "boardselector get type",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "mcuseries",
                  "oname": "mcuseries",
                  "help": "boardselector get mcuseries",
                  "argcount": 0
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "disable",
          "oname": "disable",
          "help": null,
          "children": [
            {
              "type": "Namespace",
              "name": "project",
              "oname": "project",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "generate",
                  "oname": "generate",
                  "help": "project generate true/false",
                  "argcount": 1
                }
              ]
            }
          ]
        },
        {
          "type": "Namespace",
          "name": "project",
          "oname": "project",
          "help": null,
          "children": [
            {
              "type": "Caller",
              "name": "couplefilesbyip",
              "oname": "couplefilesbyip",
              "help": "project couplefilesbyip <1/0>: Peripheral initialization done in main or in separate IPs files.",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "generateunderroot",
              "oname": "generateunderroot",
              "help": "project generateunderroot <1/0>: Project files generated under project root directory instead of specific subdir .",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "generate",
              "oname": "generate",
              "help": "project generate: generates full project",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "toolchain",
              "oname": "toolchain",
              "help": "project toolchain <toolchain>: set toolchain",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "toolchainlocation",
              "oname": "toolchainlocation",
              "help": "project toolchainlocation <toolchain location>: set toolchainlocation",
              "argcount": 1
            },
            {
              "type": "Namespace",
              "name": "set",
              "oname": "set",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "heapsize",
                  "oname": "heapsize",
                  "help": "project set heapsize <heapsize>: set minimum heap size",
                  "argcount": 1
                },
                {
                  "type": "Caller",
                  "name": "stacksize",
                  "oname": "stacksize",
                  "help": "project set stacksize <stacksize>: set minimum stack size",
                  "argcount": 1
                }
              ]
            },
            {
              "type": "Namespace",
              "name": "get",
              "oname": "get",
              "help": null,
              "children": [
                {
                  "type": "Caller",
                  "name": "heapsize",
                  "oname": "heapsize",
                  "help": "project get heapsize: get minimum heap size",
                  "argcount": 0
                },
                {
                  "type": "Caller",
                  "name": "stacksize",
                  "oname": "stacksize",
                  "help": "project get stacksize: get minimum stack size",
                  "argcount": 0
                }
              ]
            },
            {
              "type": "Caller",
              "name": "path",
              "oname": "path",
              "help": "project path <path>: set project path",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "name",
              "oname": "name",
              "help": "project name <name>: set project name",
              "argcount": 1
            },
            {
              "type": "Caller",
              "name": "import",
              "oname": "import",
              "help": "import project setting parameters",
              "argcount": 0
            },
            {
              "type": "Caller",
              "name": "save",
              "oname": "save",
              "help": "save project setting",
              "argcount": 1
            }
          ]
        },
        {
          "type": "Caller",
          "name": "setDriver",
          "oname": "setDriver",
          "help": "set Ip driver",
          "argcount": 1
        }
      ]
    }
  },
  "command_db_version": {
    "version": "0.0",
    "details": "Automatic scan performed on Thu, 30 Aug 2018 01:36:30 +0000",
    "author": "pycubemx.scanner"
  }
}